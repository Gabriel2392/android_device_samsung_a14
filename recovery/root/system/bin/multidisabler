#!/system/bin/sh
#
# A simple Samsung services disabler by Ian Macdonald.
#
# Use this to prime your device after installing TWRP.

vendor=/tmp/vendor.img

patch_file() {
    echo " - Disabling encryption and recovery restoration..."
    bxhsed --quiet $1 '/vendor/recovery-from-boot.p|/vendor/recovery-from-bsod.p' 'fileencryption=|notencryptable='
    ret=$?
    if [ "$ret" -gt "0" ]; then
        echo " -    Success... (${ret})"
    elif [ "$ret" -eq "0" ]; then
        echo " -    Already disabled..."
    else
        echo " -    Failed! (exit code: ${ret})"
    fi
}

fsck() {
    fsck.erofs $1
    if [ "$?" != "0" ]; then
        echo " - Error: Failed to run fsck!"
    fi
}

echo " "
echo "Multi-disabler for Samsung devices"
echo "running ReadOnly EROFS Vendor Images."
echo " "

os=$(getprop ro.build.version.release)
major=${os%%.*}
bl=$(getprop ro.boot.bootloader)
dp=$(getprop ro.boot.dynamic_partitions)

# Firmware version starts at either 8th or 9th character, depending on length
# of bootloader string (12 or 13).
#
fw=${bl:$((${#bl} - 4)):4}

# Device is first 5 characters of bootloader string.
#
device=${bl:0:$((${#bl} - 8))}
mft=$(getprop ro.product.manufacturer | tr '[A-Z]' '[a-z]')

if [ "$mft" != samsung ]; then
  echo " - Device appears not to be made by Samsung."
  fatal=true
elif [ -z "$device" ]; then
  echo " - Could not determine device model."
  fatal=true
elif [ $major -lt 9 ]; then
  echo " - This software is incompatible with Android $major."
  fatal=true
fi
if [ -n "$fatal" ]; then
  echo " - Installation aborted."
  echo " "
  exit 1
fi

echo " - Detected a $device device with a $fw bootloader."
echo " - The environment appears to be Android $major."
echo " "

echo " - Mounting /vendor..."
mount -o ro /vendor &>/dev/null
if ! mount | grep -q /vendor; then
  echo " -   Mount failed. Aborting..."
  exit 1
fi

dm_block=$(df -t erofs | grep "/vendor" | cut -DF1)
if [ "$dm_block" == "" ]; then
    echo " - Error: Could not determine vendor block..."
    exit 1
fi
echo " - Detected vendor at ${dm_block}"

umount /vendor &>/dev/null
if mount | grep -q /vendor; then
  echo " -   Unmount failed. Aborting..."
  exit 1
fi

dd if=$dm_block of=$vendor bs=2097152 status=none
patch_file $vendor
fsck $vendor
lptools unmap vendor
lpadd --replace --readonly /dev/block/by-name/super vendor group_basic $vendor
lptools map vendor

rm -f $vendor

echo " "
echo " - Finished."
echo " "
